<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.orangedietc.flim.mapper.MoviesCustomMapper">
    <resultMap id="BaseResultMap" type="com.orangedietc.flim.po.MoviesCustom">
	    <!--
	      WARNING - @mbg.generated
	      This element is automatically generated by MyBatis Generator, do not modify.
	      This element was generated on Thu Apr 19 18:43:51 EDT 2018.
	    -->
	    <id column="movie_id" jdbcType="INTEGER" property="movieId" />
	    <result column="imdb_id" jdbcType="CHAR" property="imdbId" />
	    <result column="movie_title" jdbcType="VARCHAR" property="movieTitle" />
	    <result column="rating" jdbcType="REAL" property="rating" />
	    <result column="movie_profile" jdbcType="CHAR" property="movieProfile" />
	    <result column="release_date" jdbcType="DATE" property="releaseDate" />
	    <result column="genres" jdbcType="CHAR" property="genres" />
	    <result column="poster" jdbcType="VARCHAR" property="poster" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.orangedietc.flim.po.MoviesCustom">
	    <!--
	      WARNING - @mbg.generated
	      This element is automatically generated by MyBatis Generator, do not modify.
	      This element was generated on Thu Apr 19 18:43:51 EDT 2018.
	    -->
	    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    </resultMap>
    
	<!-- define sql snippets for query criteria -->
	<sql id="query_movies_where">
		<!-- dynamic sql -->
		<!-- pass by moviesCustom in MoviesQueryVo object -->
		<if test="moviesCustom != null">
			<if test="moviesCustom.movieTitle != null and moviesCustom.movieTitle != ''">
				movies.movie_title LIKE '%${moviesCustom.movieTitle}%'
			</if>
		</if>
		
	</sql>
	
	<!-- movies list query -->
	<!-- parameterType should be encapsulated object(query criteria) -->
	<!-- resultType should be extended object -->
	<select id="findMoviesList" parameterType="moviesQueryVo"
	resultMap="BaseResultMap">
		SELECT movies.* FROM movies
		<where>
			<include refid="query_movies_where"></include>
		</where>
	</select>

</mapper>